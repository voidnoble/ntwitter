{"version":3,"sources":["components/Navigation.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Ntweet.js","components/NtweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","evt","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onChage","target","name","value","className","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Ntweet","item","isOwner","editing","setEditing","text","newNtweet","setNewNtweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachementUrl","toggleEditing","update","src","faTrash","faPencilAlt","NtweetFactory","ntweet","setNtweet","attachment","setAttachment","attachementRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","ntweetObj","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","fileReader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","ntweets","setNtweets","useEffect","onSnapshot","snapshot","ntweetArray","docs","map","data","key","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNtweets","where","orderBy","get","console","log","updateProfile","autoFocus","signOut","push","AppRouter","isLoaggedIn","maxWidth","width","margin","exact","path","App","init","setInit","currentUser","setLoggedIn","setUserObj","onAuthStateChanged","user","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d3eb478.chunk.js","sourcesContent":["import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}Ïùò Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onSubmit = async (evt) => {\n    evt.preventDefault();\n\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const onChage = (evt) => {\n    if (evt.target.name === 'email') {\n      setEmail(evt.target.value);\n    } else if (evt.target.name === 'password') {\n      setPassword(evt.target.value);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={email} onChange={onChage} className=\"authInput\" />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required value={password} onChange={onChage} className=\"authInput\" />\n        <div>{error && <span className=\"authError\">{error}</span>}</div>\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Log In'} className=\"authInput authSubmit\" />\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  )\n};\n\nexport default AuthForm;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { firebaseInstance, authService } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (evt) => {\n    const {\n      target: { name },\n    } = evt;\n\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst Ntweet = ({ item, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNtweet, setNewNtweet] = useState(item.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delet this?');\n    if (ok) {\n      await dbService.doc(`ntweets/${item.id}`).delete();\n      await storageService.refFromURL(item.attachementUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (evt) => {\n    evt.preventDefault();\n\n    await dbService.doc(`ntweets/${item.id}`).update({\n      text: newNtweet,\n    });\n\n    setEditing(false);\n  };\n\n  const onEditChange = (evt) => {\n    setNewNtweet(evt.target.value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        isOwner && (\n          <>\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n              <input type=\"text\" name=\"text\" value={newNtweet} onChange={onEditChange} placeholder=\"Edit your text\" required />\n              <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\n            </form>\n            <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel Edit</button>\n          </>\n        )\n      ) : (\n        <>\n          <h4>{item.text}</h4>\n          {item.attachementUrl && <img src={item.attachementUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Ntweet;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NtweetFactory = ({ userObj }) => {\n  const [ntweet, setNtweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (evt) => {\n    if (ntweet === \"\") {\n      return;\n    }\n\n    evt.preventDefault();\n\n    let attachementUrl = '';\n    if (attachment !== '') {\n      // Upload image\n      const attachementRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachementRef.putString(attachment, 'data_url');\n      attachementUrl = await response.ref.getDownloadURL();\n    }\n\n    const ntweetObj = {\n      text: ntweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachementUrl,\n    };\n\n    // Post text\n    await dbService.collection('ntweets').add(ntweetObj);\n\n    setNtweet('');\n    setAttachment(null);\n  };\n\n  const onTextChange = (evt) => {\n    setNtweet(evt.target.value);\n  };\n\n  const onFileChange = (evt) => {\n    const {\n      target: { files },\n    } = evt;\n\n    const theFile = files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = (finishedEvent) => {\n      const {\n        target: { result },\n      } = finishedEvent;\n\n      setAttachment(result);\n    };\n    fileReader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={ntweet}\n          onChange={onTextChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input type=\"file\" id=\"attach-file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0, }} />\n      <input type=\"submit\" value=\"Ntweet\" />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment, }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  )\n};\n\nexport default NtweetFactory;","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport Ntweet from 'components/Ntweet';\nimport NtweetFactory from 'components/NtweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [ntweets, setNtweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection('ntweets').onSnapshot((snapshot) => {\n      const ntweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      setNtweets(ntweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NtweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {ntweets.map((item) => (\n          <Ntweet key={item.id} item={item} isOwner={item.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const getMyNtweets = async () => {\n    const ntweets = await dbService.collection('ntweets').where('creatorId', '==', userObj.uid).orderBy('createdAt', 'desc').get();\n    console.log(ntweets.docs.map((doc) => doc.data()));\n  };\n\n  const onChangeDisplayName = (evt) => {\n    setNewDisplayName(evt.target.value);\n  };\n\n  const onSubmit = async (evt) => {\n    evt.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  useEffect(() => {\n    getMyNtweets();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input type=\"text\" autoFocus name=\"displayName\" id=\"displayName\" placeholder=\"Display name\" onChange={onChangeDisplayName} value={newDisplayName} className=\"formInput\" />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10, }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\nexport default Profile;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navigation from 'components/Navigation';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ isLoaggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoaggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoaggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoaggedIn, setLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  // When component mounting\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setLoggedIn(false);\n        setUserObj(null);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? <AppRouter isLoaggedIn={isLoaggedIn} userObj={userObj} refreshUser={refreshUser} /> : 'Initializating...'}\n      <footer>&copy; {new Date().getFullYear()} Ntwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}